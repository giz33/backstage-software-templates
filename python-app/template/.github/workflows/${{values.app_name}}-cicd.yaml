name: ${{values.app_name}}-cicd

on:
  push:
    paths:
      - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:

      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: giz333/${{values.app_name}}:${{ '${{ env.COMMIT_ID}}' }}
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID}}' }}

  cd:
    runs-on: self-hosted
    needs: ci
    steps:

      - uses: actions/checkout@v3

      - name: Modify Value File
        shell: bash
        run: |
          echo ${{ '${{needs.ci.outputs.commit_id}}' }}
          pip install yq
          yq -Yi '.image.tag = "${{'${{needs.ci.outputs.commit_id}}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml
      
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update values.yaml with the commit ${{ '${{needs.ci.outputs.commit_id}}' }}'

      - name: Install ArgoCD CLI
        shell: bash
        run: |
          curl -ksSL -o argocd-linux-amd64 https://argocd-server.argocd/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd
      
      - name: Ensure ArgoCD repo and app
        shell: bash
        run: |
          #Connects to ArgoCD
          argocd login argocd-server.argocd \
            --insecure \
            --grpc-web \
            --username admin \
            --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}
          #Connects the ArgoCD repo
          repo="https://github.com/giz-33/${{values.app_name}}.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          # Creates the ArgoCD app
          argocd app get ${{values.app_name}} || argocd app create ${{values.app_name}} \
            --repo $repo \
            --path charts/${{values.app_name}} \
            --dest-namespace ${{values.app_env}} \
            --dest-server https://kubernetes.default.svc \
            --values values-${{values.app_env}}.yaml \
            --revision master \
            --sync-policy manual \
            --sync-option CreateNamespace=true


      - name: ArgocdSync
        shell: bash
        run: |
          argocd app sync ${{values.app_name}}
          argocd app wait ${{values.app_name}} --timeout 180